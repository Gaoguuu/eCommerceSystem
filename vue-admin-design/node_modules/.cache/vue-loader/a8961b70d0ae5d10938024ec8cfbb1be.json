{"remainingRequest":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\src\\views\\image\\ImageCropper.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\src\\views\\image\\ImageCropper.vue","mtime":1728976157741},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1728977241680},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\babel-loader\\lib\\index.js","mtime":1728977243261},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1728977241680},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\vue-loader\\lib\\index.js","mtime":1728977244061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBWdWVDcm9wcGVyIH0gZnJvbSAndnVlLWNyb3BwZXInDQppbXBvcnQgSGludHMgZnJvbSAnQC9jb21wb25lbnRzL0hpbnRzJw0KaW1wb3J0IFVwbG9hZEltYWdlIGZyb20gJ0AvY29tcG9uZW50cy9VcGxvYWRJbWFnZScNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnSW1hZ2VDcm9wcGVyJywNCiAgY29tcG9uZW50czogeyBIaW50cywgVnVlQ3JvcHBlciwgVXBsb2FkSW1hZ2UgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY29uZmlnT2JqOiB7DQogICAgICAgIGltZ1NyYzogJ2h0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9iYWltaW5neHVhbi9tZWRpYS1zdG9yZS9pbWFnZXMvaW1nMDIuanBnJywNCiAgICAgICAgY2FuTW92ZTogZmFsc2UsDQogICAgICAgIGF1dG9Dcm9wOiB0cnVlLA0KICAgICAgICBjZW50ZXJCb3g6IHRydWUsDQogICAgICAgIGluZm9UcnVlOiB0cnVlLA0KICAgICAgICBmdWxsOiB0cnVlLA0KICAgICAgICBhdXRvQ3JvcFdpZHRoOiAzMDAsDQogICAgICAgIGF1dG9Dcm9wSGVpZ2h0OiAyMDAsDQogICAgICAgIG91dHB1dFR5cGU6ICdwbmcnDQogICAgICB9LA0KICAgICAgZG93bkltZzogJyMnLA0KICAgICAgcHJldmlld3M6IHt9DQogICAgfQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgaGFuZGxlU3VjY2VzcyhkYXRhKSB7DQogICAgICB0aGlzLmNvbmZpZ09iai5pbWdTcmMgPSBkYXRhDQogICAgfSwNCiAgICByZWFsVGltZShkYXRhKSB7DQogICAgICB0aGlzLnByZXZpZXdzID0gZGF0YQ0KICAgIH0sDQogICAgZG93bmxvYWRJbWFnZSgpIHsNCiAgICAgIHRoaXMuJHJlZnMuY3JvcHBlci5nZXRDcm9wQmxvYihkYXRhID0+IHsNCiAgICAgICAgdGhpcy5kb3duSW1nID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoZGF0YSkNCiAgICAgICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3IubXNTYXZlQmxvYikgew0KICAgICAgICAgIGNvbnN0IGJsb2JPYmplY3QgPSBuZXcgQmxvYihbZGF0YV0pDQogICAgICAgICAgd2luZG93Lm5hdmlnYXRvci5tc1NhdmVCbG9iKGJsb2JPYmplY3QsICdkZW1vLnBuZycpDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICAgICAgdGhpcy4kcmVmcy5kb3dubG9hZERvbS5jbGljaygpDQogICAgICAgICAgfSkNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["ImageCropper.vue"],"names":[],"mappings":";AA6DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImageCropper.vue","sourceRoot":"src/views/image","sourcesContent":["<template>\r\n  <div class=\"image-cropper-wrapper\">\r\n    <Hints>\r\n      <template slot=\"hintName\">图片裁剪插件</template>\r\n      <template slot=\"hintInfo\">\r\n        <p>Vue-Cropper：一个优雅的图片裁剪插件，可实现图片裁剪、图片生成等功能，并支持生成png、jpeg、webp等图片格式</p>\r\n        <p>github地址：访问 <el-link type=\"success\" href=\"https://github.com/xyxiao001/vue-cropper\" target=\"_blank\">Vue-Cropper</el-link></p>\r\n      </template>\r\n    </Hints>\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"10\">\r\n        <el-card shadow=\"always\">\r\n          <div slot=\"header\" class=\"title\">裁剪区域</div>\r\n          <div class=\"content-box\" style=\" height: 400px;\">\r\n            <VueCropper\r\n              ref=\"cropper\"\r\n              :img=\"configObj.imgSrc\"\r\n              :can-move=\"configObj.canMove\"\r\n              :auto-crop=\"configObj.autoCrop\"\r\n              :center-box=\"configObj.centerBox\"\r\n              :info-true=\"configObj.infoTrue\"\r\n              :full=\"configObj.full\"\r\n              :auto-crop-width=\"configObj.autoCropWidth\"\r\n              :auto-crop-height=\"configObj.autoCropHeight\"\r\n              :output-type=\"configObj.outputType\"\r\n              @realTime=\"realTime\"\r\n            />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-card shadow=\"always\">\r\n          <div slot=\"header\" class=\"title\">设置区域</div>\r\n          <div class=\"content-box\" style=\" height: 400px;\">\r\n            <div style=\"height: 100px;\">\r\n              <UploadImage @on-success=\"handleSuccess\" />\r\n              <el-button size=\"small\" type=\"primary\" style=\"margin-top: 20px\">\r\n                <a @click=\"downloadImage\">生成图片</a>\r\n              </el-button>\r\n              <a ref=\"downloadDom\" :href=\"downImg\" download=\"demo.png\" />\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"10\">\r\n        <el-card shadow=\"always\">\r\n          <div slot=\"header\" class=\"title\">预览区域</div>\r\n          <div class=\"content-box\" style=\"height: 400px;\">\r\n            <div class=\"show-preview\" :style=\"{'width': previews.w + 'px', 'height': previews.h + 'px', 'overflow': 'hidden', 'zoom': (400 / previews.h)}\">\r\n              <div :style=\"previews.div\">\r\n                <img :src=\"previews.url\" :style=\"previews.img\" alt=\"预览\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { VueCropper } from 'vue-cropper'\r\nimport Hints from '@/components/Hints'\r\nimport UploadImage from '@/components/UploadImage'\r\n\r\nexport default {\r\n  name: 'ImageCropper',\r\n  components: { Hints, VueCropper, UploadImage },\r\n  data() {\r\n    return {\r\n      configObj: {\r\n        imgSrc: 'https://cdn.jsdelivr.net/gh/baimingxuan/media-store/images/img02.jpg',\r\n        canMove: false,\r\n        autoCrop: true,\r\n        centerBox: true,\r\n        infoTrue: true,\r\n        full: true,\r\n        autoCropWidth: 300,\r\n        autoCropHeight: 200,\r\n        outputType: 'png'\r\n      },\r\n      downImg: '#',\r\n      previews: {}\r\n    }\r\n  },\r\n  methods: {\r\n    handleSuccess(data) {\r\n      this.configObj.imgSrc = data\r\n    },\r\n    realTime(data) {\r\n      this.previews = data\r\n    },\r\n    downloadImage() {\r\n      this.$refs.cropper.getCropBlob(data => {\r\n        this.downImg = window.URL.createObjectURL(data)\r\n        if (window.navigator.msSaveBlob) {\r\n          const blobObject = new Blob([data])\r\n          window.navigator.msSaveBlob(blobObject, 'demo.png')\r\n        } else {\r\n          this.$nextTick(() => {\r\n            this.$refs.downloadDom.click()\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}