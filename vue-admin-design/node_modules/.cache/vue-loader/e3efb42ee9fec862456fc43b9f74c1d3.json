{"remainingRequest":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\src\\views\\image\\ImageCompress.vue?vue&type=style&index=0&id=7962655f&lang=less","dependencies":[{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\src\\views\\image\\ImageCompress.vue","mtime":1728976157741},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\css-loader\\dist\\cjs.js","mtime":1728977242423},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1728977244848},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\postcss-loader\\src\\index.js","mtime":1728977243244},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\less-loader\\dist\\cjs.js","mtime":1728977242915},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1728977241680},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\vue-loader\\lib\\index.js","mtime":1728977244061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICIuLi8uLi9hc3NldHMvbGVzcy9pbWFnZS1jb21wcmVzcyI7DQo="},{"version":3,"sources":["ImageCompress.vue"],"names":[],"mappings":";AA2MA","file":"ImageCompress.vue","sourceRoot":"src/views/image","sourcesContent":["<template>\r\n  <div class=\"image-compress\">\r\n    <Hints>\r\n      <template slot=\"hintName\">图片压缩</template>\r\n      <template slot=\"hintInfo\">\r\n        <p>纯JS实现对图片的等比压缩和放大的功能，并对图片进行下载</p>\r\n      </template>\r\n    </Hints>\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"16\">\r\n        <el-card shadow=\"always\">\r\n          <div slot=\"header\" class=\"title\">图片区域</div>\r\n          <div class=\"box-wrapper\">\r\n            <div class=\"image-container\" :style=\"imageStyle\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card shadow=\"always\">\r\n          <div slot=\"header\" class=\"title\">设置区域</div>\r\n          <div class=\"box-content\">\r\n            <el-form label-width=\"82px\" label-position=\"left\">\r\n              <el-form-item label=\"选择图片：\">\r\n                <UploadImage class=\"select-image\" btn-name=\"选择图片\" @on-success=\"handleSuccess\" />\r\n              </el-form-item>\r\n              <el-form-item label=\"图片尺寸：\">\r\n                <div class=\"ratio-size\">\r\n                  <el-input v-model.number=\"imageObj.width\" @keyup.native=\"bindInput('h')\" />\r\n                  <i class=\"vue-dsn-icon-edit-img-size-locking icon-link\" />\r\n                  <el-input v-model.number=\"imageObj.height\" @keyup.native=\"bindInput('w')\" />\r\n                  <ul class=\"ratio-type clearfix\">\r\n                    <li>宽</li>\r\n                    <li>高</li>\r\n                  </ul>\r\n                </div>\r\n              </el-form-item>\r\n              <el-form-item label=\"压缩比例：\" class=\"item-ratio\">\r\n                <el-input v-model.number=\"imageObj.ratio\" disabled />\r\n              </el-form-item>\r\n              <el-form-item label=\"图片质量：\">\r\n                <el-select v-model=\"imageObj.quality\" placeholder=\"请选择\">\r\n                  <el-option\r\n                    v-for=\"item in qualityOptions\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\"\r\n                  />\r\n                </el-select>\r\n              </el-form-item>\r\n              <div>\r\n                <el-button class=\"btn-compress\" type=\"primary\" @click=\"compressImage\">压缩图片</el-button>\r\n              </div>\r\n            </el-form>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Hints from '@/components/Hints'\r\nimport UploadImage from '@/components/UploadImage'\r\nimport { base64toBlob, calcImageSize } from '@/utils'\r\nconst qualityOptions = [\r\n  { label: 100, value: 1 },\r\n  { label: 90, value: 0.9 },\r\n  { label: 80, value: 0.8 },\r\n  { label: 70, value: 0.7 },\r\n  { label: 60, value: 0.6 },\r\n  { label: 50, value: 0.5 }\r\n]\r\n\r\nexport default {\r\n  name: 'ImageCompress',\r\n  components: { Hints, UploadImage },\r\n  data() {\r\n    return {\r\n      // 图片对象\r\n      image: {\r\n        width: 1920,\r\n        height: 1080,\r\n        src: 'https://cdn.jsdelivr.net/gh/baimingxuan/media-store/images/img03.jpg'\r\n      },\r\n      // 图片显示对象\r\n      imageShow: {\r\n        width: 0,\r\n        height: 0,\r\n        imgSrc: ''\r\n      },\r\n      // 图片压缩的值对象\r\n      imageObj: {\r\n        width: 0,\r\n        height: 0,\r\n        ratio: 100 + '%',\r\n        quality: 1\r\n      },\r\n      qualityOptions\r\n    }\r\n  },\r\n  computed: {\r\n    // 图片显示区样式\r\n    imageStyle() {\r\n      return {\r\n        width: this.imageShow.width + 'px',\r\n        height: this.imageShow.height + 'px',\r\n        backgroundImage: 'url(\\'' + this.imageShow.imgSrc + '\\')'\r\n      }\r\n    },\r\n    // 图片宽高比率\r\n    imageRatio() {\r\n      return this.image.width / this.image.height\r\n    }\r\n  },\r\n  watch: {\r\n    image: {\r\n      handler(val) {\r\n        this.getDragContainerSize(val.width, val.height)\r\n        this.imageShow.imgSrc = val.src\r\n        this.imageObj.width = val.width\r\n        this.imageObj.height = val.height\r\n        this.imageObj.ratio = 100 + '%'\r\n        this.imageObj.quality = 1\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  created() {\r\n    this.getDragContainerSize(this.image.width, this.image.height)\r\n    this.imageShow.imgSrc = this.image.src\r\n    this.imageObj.width = this.image.width\r\n    this.imageObj.height = this.image.height\r\n  },\r\n  methods: {\r\n    // 输入宽高关联\r\n    bindInput(type) {\r\n      if (type === 'h') {\r\n        this.imageObj.height = Math.round(this.imageObj.width / this.imageRatio).toFixed(0)\r\n      } else if (type === 'w') {\r\n        this.imageObj.width = Math.round(this.imageObj.height * this.imageRatio).toFixed(0)\r\n      }\r\n      this.imageObj.ratio = (this.imageObj.width / this.image.width * 100).toFixed(2) + '%'\r\n    },\r\n    // 计算图片显示宽高\r\n    getDragContainerSize(imageW, imageH) {\r\n      const [showAreaW, showAreaH] = [850, 550]\r\n      const sizeObj = calcImageSize(imageW, imageH, showAreaW, showAreaH)\r\n      // 更新图片展示区宽高\r\n      this.imageShow.width = sizeObj.width\r\n      this.imageShow.height = sizeObj.height\r\n    },\r\n    handleSuccess(data) {\r\n      this.image.src = data\r\n      const image = new Image()\r\n      image.src = data\r\n      image.onload = () => {\r\n        this.image.width = image.width\r\n        this.image.height = image.height\r\n      }\r\n    },\r\n    // 图片压缩\r\n    compressImage() {\r\n      const width = this.imageObj.width\r\n      const height = this.imageObj.height\r\n      const quality = this.imageObj.quality\r\n      const img = new Image()\r\n      img.src = this.image.src\r\n      img.onload = () => {\r\n        // 创建canvas\r\n        const canvas = document.createElement('canvas')\r\n        const ctx = canvas.getContext('2d')\r\n        // 创建属性节点\r\n        const anw = document.createAttribute('width')\r\n        anw.nodeValue = width\r\n        const anh = document.createAttribute('height')\r\n        anh.nodeValue = height\r\n        canvas.setAttributeNode(anw)\r\n        canvas.setAttributeNode(anh)\r\n        // 绘制图片\r\n        ctx.fillRect(0, 0, width, height)\r\n        ctx.drawImage(img, 0, 0, width, height)\r\n        // 生成base64图片\r\n        const imageBase64 = canvas.toDataURL('image/png', quality)\r\n        this.downloadImage(imageBase64)\r\n      }\r\n    },\r\n    // 下载压缩的图片\r\n    downloadImage(imageBase64) {\r\n      const imageBlob = base64toBlob(imageBase64)\r\n      const link = document.createElement('a')\r\n      const event = document.createEvent('HTMLEvents')\r\n      // initEvent 不加后两个参数会在火狐下报错 事件类型，是否冒泡，是否阻止浏览器的默认行为\r\n      event.initEvent('click', true, true)\r\n      link.download = 'image.png'\r\n      link.href = URL.createObjectURL(imageBlob)\r\n      // 兼容火狐\r\n      link.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import \"../../assets/less/image-compress\";\r\n</style>\r\n"]}]}