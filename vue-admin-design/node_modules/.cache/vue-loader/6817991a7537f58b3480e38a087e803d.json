{"remainingRequest":"D:\\projectWork\\thirdGrade\\econmic\\mrpSystem\\vue-admin-design\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectWork\\thirdGrade\\econmic\\mrpSystem\\vue-admin-design\\src\\views\\mrpCount\\mrpList.vue?vue&type=style&index=0&id=0120c918&lang=less","dependencies":[{"path":"D:\\projectWork\\thirdGrade\\econmic\\mrpSystem\\vue-admin-design\\src\\views\\mrpCount\\mrpList.vue","mtime":1729758850484},{"path":"D:\\projectWork\\thirdGrade\\econmic\\mrpSystem\\vue-admin-design\\node_modules\\css-loader\\dist\\cjs.js","mtime":1728977242423},{"path":"D:\\projectWork\\thirdGrade\\econmic\\mrpSystem\\vue-admin-design\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1728977244848},{"path":"D:\\projectWork\\thirdGrade\\econmic\\mrpSystem\\vue-admin-design\\node_modules\\postcss-loader\\src\\index.js","mtime":1728977243244},{"path":"D:\\projectWork\\thirdGrade\\econmic\\mrpSystem\\vue-admin-design\\node_modules\\less-loader\\dist\\cjs.js","mtime":1728977242915},{"path":"D:\\projectWork\\thirdGrade\\econmic\\mrpSystem\\vue-admin-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1728977241680},{"path":"D:\\projectWork\\thirdGrade\\econmic\\mrpSystem\\vue-admin-design\\node_modules\\vue-loader\\lib\\index.js","mtime":1728977244061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudGFibGUtY2xhc3NpYy13cmFwcGVyIHsNCiAgLmVsLWNhcmQgew0KICAgIG1pbi1oZWlnaHQ6IDY1NnB4Ow0KICB9DQogIC5jb250cm9sLWJ0bnMgew0KICAgIG1hcmdpbi1ib3R0b206IDIwcHg7DQogIH0NCiAgLnNlYXJjaC1mb3JtIHsNCiAgICBwYWRkaW5nLXRvcDogMThweDsNCiAgICBtYXJnaW4tYm90dG9tOiAxNXB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmN2Y4ZmI7DQogIH0NCiAgLmVsLXRhYmxlIHRoZWFkIHsNCiAgICBmb250LXdlaWdodDogNjAwOw0KICAgIHRoIHsNCiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYzZjc7DQogICAgfQ0KICB9DQogIC5kaWFsb2ctZm9ybSB7DQogICAgLmVsLWlucHV0IHsNCiAgICAgIHdpZHRoOiAzODBweDsNCiAgICB9DQogICAgLmZvb3Rlci1pdGVtIHsNCiAgICAgIG1hcmdpbi10b3A6IDUwcHg7DQogICAgICB0ZXh0LWFsaWduOiByaWdodDsNCiAgICB9DQogIH0NCiAgLnVwbG9hZC1ib3gsDQogIC5leHBvcnQtZGF0YSB7DQogICAgd2lkdGg6IDMwMHB4Ow0KICAgIG1hcmdpbjogMCBhdXRvIDMwcHg7DQogIH0NCiAgLnVwbG9hZC1ib3ggew0KICAgIHdpZHRoOiAxNTZweDsNCiAgICAuZmlsZXMtdXBsb2FkIHsNCiAgICAgIGNvbG9yOiAjMjBhMGZmOw0KICAgIH0NCiAgfQ0KICAuaGludHMgew0KICAgIGZvbnQtc2l6ZTogMTJweDsNCiAgICBjb2xvcjogI2FhYTsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIH0NCn0NCg=="},{"version":3,"sources":["mrpList.vue"],"names":[],"mappings":";AAsaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mrpList.vue","sourceRoot":"src/views/mrpCount","sourcesContent":["<template>\r\n  <div class=\"table-classic-wrapper\">\r\n    <Hints>\r\n      <template slot=\"hintName\">Table表格组件</template>\r\n      <template slot=\"hintInfo\">\r\n        <p>element-Table：使用elementUI的Table组件，可用于展示多条结构类似的数据，并对其进行相关操作</p>\r\n        <p>地址：访问 <el-link type=\"success\" href=\"https://element.eleme.cn/2.13/TableClassic.vue#/zh-CN/component/table\" target=\"_blank\">element-Table</el-link></p>\r\n      </template>\r\n    </Hints>\r\n    <el-card shadow=\"always\">\r\n      <!-- 操作栏 -->\r\n      <div class=\"control-btns\">\r\n        <el-button type=\"primary\" @click=\"handleCreate\">新建数据</el-button>\r\n        <el-button type=\"primary\" @click=\"handleImport\">导入数据</el-button>\r\n        <el-button type=\"primary\" @click=\"exportVisible = true\">导出数据</el-button>\r\n        <el-button type=\"danger\" @click=\"batchDelete\">批量删除</el-button>\r\n      </div>\r\n      <!-- 查询栏 -->\r\n      <el-form\r\n        ref=\"searchForm\"\r\n        :inline=\"true\"\r\n        :model=\"listQuery\"\r\n        label-width=\"90px\"\r\n        class=\"search-form\"\r\n      >\r\n        <el-form-item label=\"产品名称\">\r\n          <el-input v-model=\"listQuery.matName\" placeholder=\"产品名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"产品数量\">\r\n          <el-input v-model.number=\"listQuery.matNumber\" placeholder=\"产品数量\" />\r\n        </el-form-item>        \r\n        <el-form-item label=\"完工日期\">\r\n          <!-- <el-input v-model=\"listQuery.phone\" placeholder=\"完工日期\" /> -->\r\n          <el-date-picker v-model=\"listQuery.data\" type=\"date\" placeholder=\"选择日期\" style=\"width: 100%;\" />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"onAdd\">添加</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 查询详细栏 -->\r\n<!-- 查询详细栏 -->\r\n<el-table v-loading=\"listLoading\" :data=\"arrayQuery\" tooltip-effect=\"dark\" style=\"width: 100%\" size=\"medium\">\r\n  <el-table-column label=\"产品名称\" align=\"center\">\r\n    <template slot-scope=\"scope\">\r\n      {{ scope.row.matName }}\r\n    </template>\r\n  </el-table-column>\r\n  <el-table-column label=\"货量\" align=\"center\">\r\n    <template slot-scope=\"scope\">\r\n      {{ scope.row.matNumber }}\r\n    </template>\r\n  </el-table-column>\r\n  <el-table-column label=\"完工日期\" align=\"center\">\r\n    <template slot-scope=\"scope\">\r\n      {{ scope.row.data }}\r\n    </template>\r\n  </el-table-column>\r\n  <el-table-column align=\"center\" label=\"操作\" width=\"200\">\r\n    <template slot-scope=\"scope\">\r\n      <el-button type=\"success\" size=\"small\" @click=\"arrayDelete(scope.$index)\">删除</el-button>\r\n    </template>\r\n  </el-table-column>\r\n</el-table>\r\n\r\n      <!-- 表格栏 -->\r\n      <el-table\r\n        v-loading=\"listLoading\"\r\n        :data=\"tableData\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%\"\r\n        size=\"medium\"\r\n\r\n      >\r\n        <el-table-column type=\"selection\" width=\"60\" />\r\n        <el-table-column prop=\"name\" label=\"产品名称\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-popover trigger=\"hover\" placement=\"top\">\r\n              <p>编号: {{ scope.row.name }}</p>\r\n              <p>货物数量: {{ scope.row.number }}</p>\r\n              <p>完成日期: {{ scope.row.comdate }}</p>\r\n              <div slot=\"reference\">\r\n                <el-tag size=\"medium\">{{ scope.row.name }}</el-tag>\r\n              </div>\r\n            </el-popover>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"生产方式\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.pro }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"数量\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.number }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"education\" label=\"下达日期\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.predate }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"education\" label=\"完成日期\" align=\"center\">\r\n          <template slot-scope=\"scope\">{{ scope.row.comdate }}</template>\r\n        </el-table-column>\r\n\r\n        <!-- <el-table-column label=\"禁止编辑\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-switch v-model=\"scope.row.forbid\" @change=\"stateChange(scope.row)\" />\r\n          </template>\r\n        </el-table-column> -->\r\n        <!-- <el-table-column label=\"操作\" align=\"center\" width=\"200\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button size=\"mini\" :disabled=\"scope.row.forbid\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column> -->\r\n      </el-table>\r\n      <!-- 分页栏 -->\r\n      <!-- <Pagination :total=\"total\" :page.sync=\"listQuery.currentPage\" :limit.sync=\"listQuery.pageSize\" @pagination=\"fetchData\" /> -->\r\n      <!-- 新增/编辑 弹出栏 -->\r\n      <el-dialog\r\n        title=\"编辑\"\r\n        :visible.sync=\"formVisible\"\r\n        width=\"30%\"\r\n        class=\"dialog-form\"\r\n        :before-close=\"handleClose\"\r\n      >\r\n        <el-form\r\n          ref=\"dialogForm\"\r\n          :model=\"dialogForm\"\r\n          :rules=\"formRules\"\r\n          label-width=\"100px\"\r\n        >\r\n          <el-form-item label=\"姓名：\" prop=\"name\">\r\n            <el-input v-model=\"dialogForm.name\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"手机：\" prop=\"phone\">\r\n            <el-input v-model=\"dialogForm.phone\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"婚姻状况：\" prop=\"married\">\r\n            <el-select v-model=\"dialogForm.married\">\r\n              <el-option :value=\"0\" label=\"单身\" />\r\n              <el-option :value=\"1\" label=\"未婚\" />\r\n              <el-option :value=\"2\" label=\"已婚\" />\r\n              <el-option :value=\"3\" label=\"离异\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"爱好：\" prop=\"hobby\">\r\n            <el-checkbox-group v-model=\"dialogForm.hobby\">\r\n              <el-checkbox label=\"羽毛球\" name=\"hobby\" />\r\n              <el-checkbox label=\"乒乓球\" name=\"hobby\" />\r\n              <el-checkbox label=\"篮球\" name=\"hobby\" />\r\n              <el-checkbox label=\"排球\" name=\"hobby\" />\r\n              <el-checkbox label=\"网球\" name=\"hobby\" />\r\n              <el-checkbox label=\"旱冰\" name=\"hobby\" />\r\n              <el-checkbox label=\"滑雪\" name=\"hobby\" />\r\n              <el-checkbox label=\"跳高\" name=\"hobby\" />\r\n              <el-checkbox label=\"冲浪\" name=\"hobby\" />\r\n            </el-checkbox-group>\r\n          </el-form-item>\r\n          <div class=\"footer-item\">\r\n            <el-button @click=\"cancleForm\">取 消</el-button>\r\n            <el-button type=\"primary\" :disabled=\"isSubmit\" @click=\"submitForm('dialogForm')\">确 定</el-button>\r\n          </div>\r\n        </el-form>\r\n      </el-dialog>\r\n      <!-- 导入数据 弹出栏 -->\r\n      <el-dialog\r\n        title=\"导入数据\"\r\n        :visible.sync=\"importVisible\"\r\n        width=\"20%\"\r\n      >\r\n        <div class=\"upload-box\">\r\n          <span>选择文件：</span>\r\n          <Upload :files-format=\"filesFormat\">\r\n            <i class=\"vue-dsn-icon-upload\" />上传文件\r\n          </Upload>\r\n        </div>\r\n        <div class=\"hints\">TIP：请选择要导出数据的格式。</div>\r\n        <span slot=\"footer\">\r\n          <el-button @click=\"cancleImport\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"confirmImport\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 导出数据 弹出栏 -->\r\n      <el-dialog\r\n        title=\"导出数据\"\r\n        :visible.sync=\"exportVisible\"\r\n        width=\"30%\"\r\n      >\r\n        <div class=\"export-data\">\r\n          <el-button type=\"primary\" @click=\"exportTable('xlsx')\">EXCEL格式</el-button>\r\n          <el-button type=\"primary\" @click=\"exportTable('csv')\">CSV格式</el-button>\r\n          <el-button type=\"primary\" @click=\"exportTable('txt')\">TXT格式</el-button>\r\n        </div>\r\n        <div class=\"hints\">TIP：请选择要导出数据的格式。</div>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getTableList,mrpOpera  } from '@/api'\r\nimport excel from '@/utils/excel'\r\nimport Pagination from '@/components/Pagination'\r\nimport Upload from '@/components/Upload'\r\nimport Hints from '@/components/Hints'\r\nimport dayjs from 'dayjs';\r\n\r\nexport default {\r\n  name: 'Table',\r\n  components: { Pagination, Upload, Hints },\r\n  data() {\r\n    return {\r\n      // 数据列表加载动画\r\n      listLoading: true,\r\n      // 查询列表参数对象\r\n      listQuery: {\r\n        matName: '',\r\n        matNumber: 0,\r\n        data: dayjs().format('YYYY-MM-DD')\r\n        // currentPage: 1,\r\n        // pageSize: 10\r\n      },\r\n      arrayQuery: [],\r\n      // 新增/编辑提交表单对象\r\n      dialogForm: {\r\n        name: undefined,\r\n        phone: undefined,\r\n        married: undefined,\r\n        hobby: []\r\n      },\r\n      // 数据总条数\r\n      total: 0,\r\n      // 表格数据数组\r\n      tableData: [],\r\n      // 多选数据暂存数组\r\n      multipleSelection: [],\r\n      // 新增/编辑 弹出框显示/隐藏\r\n      formVisible: false,\r\n      // 表单校验 trigger: ['blur', 'change'] 为多个事件触发\r\n      formRules: {\r\n        name: [\r\n          { required: true, message: '请输入姓名', trigger: 'blur' }\r\n        ],\r\n        phone: [\r\n          { required: true, message: '请输入手机号', trigger: 'blur' },\r\n          { pattern: /^1[3456789]\\d{9}$/, message: '请输入正确的手机号', trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 防止多次连续提交表单\r\n      isSubmit: false,\r\n      // 导入数据 弹出框显示/隐藏\r\n      importVisible: false,\r\n      // 导出文件格式\r\n      filesFormat: '.txt, .csv, .xls, .xlsx',\r\n      // 导出数据 弹出框显示/隐藏\r\n      exportVisible: false\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    // 多选操作\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val\r\n    },\r\n    // 新建数据\r\n    handleCreate() {\r\n      this.formVisible = true\r\n      this.dialogForm.name = undefined\r\n      this.dialogForm.phone = undefined\r\n      this.dialogForm.married = undefined\r\n      this.dialogForm.hobby = []\r\n    },\r\n    // 编辑数据\r\n    handleEdit(index, row) {\r\n      console.log(index, row)\r\n      this.formVisible = true\r\n      this.dialogForm.name = row.name\r\n      this.dialogForm.phone = row.phone\r\n      this.dialogForm.married = row.married\r\n      this.dialogForm.hobby = row.hobby.split('、')\r\n    },\r\n    // 删除数据\r\n    handleDelete(index, row) {\r\n      console.log(index, row)\r\n      this.$confirm('此操作将删除选中数据, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        // 此处可添加--删除接口\r\n        // 删除成功调用fetchData方法更新列表\r\n        this.$message({\r\n          type: 'success',\r\n          message: '删除成功!'\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        })\r\n      })\r\n    },\r\n    // 批量删除\r\n    batchDelete() {\r\n      if (this.multipleSelection.length < 1) {\r\n        this.$message({\r\n          message: '请先选择要删除的数据！',\r\n          type: 'warning'\r\n        })\r\n      } else {\r\n        this.handleDelete()\r\n      }\r\n    },\r\n    // 新增/编辑弹出框 关闭时操作\r\n    handleClose() {\r\n      this.formVisible = false\r\n      this.$refs.dialogForm.resetFields()\r\n    },\r\n    // 获取数据列表\r\n    fetchData() {\r\n      this.listLoading = true\r\n      // 获取数据列表接口\r\n      mrpOpera ({\r\n        opera_type:'get_question_list',\r\n        mrpList:this.arrayQuery\r\n      }).then(res => {\r\n        console.log(res)\r\n        if (1) {\r\n          this.total = res.total\r\n          this.tableData = res.erpList\r\n          console.log(this.tableData)\r\n          this.listLoading = false\r\n          \r\n        }\r\n      }).catch(() => {\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    // 查询数据\r\n    onAdd(){\r\n      const formattedQuery = {\r\n      ...this.listQuery,\r\n      matNumber: Number(this.listQuery.matNumber), // 转换为数字类型 \r\n  };\r\n      this.arrayQuery.push(formattedQuery);\r\n      console.log(this.arrayQuery)\r\n      \r\n    },\r\n    onSubmit() {\r\n      // this.listQuery.currentPage = 1\r\n      this.fetchData()\r\n    },\r\n    // 导入数据\r\n    handleImport() {\r\n      this.importVisible = true\r\n    },\r\n    // 新增/编辑表单确认提交\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          // 此处添加 新增/编辑数据的接口 新增成功后调用fetchData方法更新列表\r\n          // 先 this.isSubmit = true 接口返回成功后 再 this.isSubmit = false\r\n          this.formVisible = false\r\n        } else {\r\n          this.isSubmit = false\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 新增/编辑表单取消提交\r\n    cancleForm() {\r\n      this.$refs.dialogForm.resetFields()\r\n      this.formVisible = false\r\n    },\r\n    // 导入数据弹出栏 确认操作\r\n    confirmImport() {\r\n      // 此处添加 后台接收的接口，将导入的数据传给后台处理\r\n      this.importVisible = false\r\n    },\r\n    // 导入数据弹出栏 取消操作\r\n    cancleImport() {\r\n      // 将导入的数据清空\r\n      this.importVisible = false\r\n    },\r\n    // 导出数据--excle格式\r\n    exportTable(type) {\r\n      if (this.tableData.length) {\r\n        const params = {\r\n          header: ['编号', '姓名', '性别', '手机', '学历', '婚姻状况', '禁止编辑', '爱好'],\r\n          key: ['id', 'name', 'sex', 'phone', 'education', 'married', 'forbid', 'hobby'],\r\n          data: this.tableData,\r\n          autoWidth: true,\r\n          fileName: '综合表格',\r\n          bookType: type\r\n        }\r\n        excel.exportDataToExcel(params)\r\n        this.exportVisible = false\r\n      }\r\n    },\r\n    // 列表中婚姻状况栏，状态值改变时，调用\r\n    selectChange(row) {\r\n      // 此处添加后台接口，成功后调用fetchData方法更新列表\r\n    },\r\n    // 列表中禁止编辑栏，状态值改变时，调用\r\n    stateChange(row) {\r\n      // 此处添加后台接口，成功后调用fetchData方法更新列表\r\n    },\r\n    confirmEdit(row) {\r\n      row.editable = false\r\n      row.originalHobby = row.hobby\r\n      // 此处添加 后端保存数据接口\r\n    },\r\n    arrayDelete(index){\r\n      console.log(this.arrayQuery)\r\n      this.arrayQuery.splice(index,1)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.table-classic-wrapper {\r\n  .el-card {\r\n    min-height: 656px;\r\n  }\r\n  .control-btns {\r\n    margin-bottom: 20px;\r\n  }\r\n  .search-form {\r\n    padding-top: 18px;\r\n    margin-bottom: 15px;\r\n    background-color: #f7f8fb;\r\n  }\r\n  .el-table thead {\r\n    font-weight: 600;\r\n    th {\r\n      background-color: #f2f3f7;\r\n    }\r\n  }\r\n  .dialog-form {\r\n    .el-input {\r\n      width: 380px;\r\n    }\r\n    .footer-item {\r\n      margin-top: 50px;\r\n      text-align: right;\r\n    }\r\n  }\r\n  .upload-box,\r\n  .export-data {\r\n    width: 300px;\r\n    margin: 0 auto 30px;\r\n  }\r\n  .upload-box {\r\n    width: 156px;\r\n    .files-upload {\r\n      color: #20a0ff;\r\n    }\r\n  }\r\n  .hints {\r\n    font-size: 12px;\r\n    color: #aaa;\r\n    text-align: center;\r\n  }\r\n}\r\n</style>\r\n"]}]}