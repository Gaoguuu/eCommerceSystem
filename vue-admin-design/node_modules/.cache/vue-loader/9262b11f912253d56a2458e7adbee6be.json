{"remainingRequest":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\src\\views\\video\\VideoMark.vue?vue&type=style&index=0&id=1814e7ec&lang=less","dependencies":[{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\src\\views\\video\\VideoMark.vue","mtime":1728976157745},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\css-loader\\dist\\cjs.js","mtime":1728977242423},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1728977244848},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\postcss-loader\\src\\index.js","mtime":1728977243244},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\less-loader\\dist\\cjs.js","mtime":1728977242915},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1728977241680},{"path":"D:\\projectWork\\thirdGrade\\econmic\\vue-admin-design\\node_modules\\vue-loader\\lib\\index.js","mtime":1728977244061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudmlkZW8tbWFyay13cmFwcGVyIHsNCiAgLmJveC13cmFwcGVyIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgaGVpZ2h0OiA1NTBweDsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgIC5kcmFnLWNvbnRhaW5lciB7DQogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgICB3aWR0aDogODUwcHg7DQogICAgICBoZWlnaHQ6IDQ3OHB4Ow0KICAgICAgdmlkZW8gew0KICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgICAgIHRvcDogMDsNCiAgICAgICAgbGVmdDogMDsNCiAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgIGhlaWdodDogMTAwJTsNCiAgICAgIH0NCiAgICAgIC56LWRyci1jb250YWluZXIgew0KICAgICAgICBib3JkZXI6IDFweCBkYXNoZWQgdHJhbnNwYXJlbnQ7DQogICAgICAgICYuei1hY3RpdmUgew0KICAgICAgICAgIGJvcmRlcjogMXB4IGRhc2hlZCAjMmU5NWZmOw0KICAgICAgICB9DQogICAgICB9DQogICAgfQ0KICB9DQogIC5ib3gtY29udGVudCB7DQogICAgaGVpZ2h0OiA1NTBweDsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgIC5mb3JtLXdyYXBwZXIgew0KICAgICAgd2lkdGg6IDMwMHB4Ow0KICAgICAgbWFyZ2luOiA1MHB4IGF1dG8gMDsNCiAgICB9DQogICAgLmVsLWJ1dHRvbiB7DQogICAgICB3aWR0aDogMjEwcHg7DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["VideoMark.vue"],"names":[],"mappings":";AA8MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VideoMark.vue","sourceRoot":"src/views/video","sourcesContent":["<template>\r\n  <div class=\"video-mark-wrapper\">\r\n    <Hints>\r\n      <template slot=\"hintName\">视频水印</template>\r\n      <template slot=\"hintInfo\">\r\n        <p>基于VueDRR拖拽功能，在视频上通过叠加图片、文字等，实现视频添加水印的功能</p>\r\n        <p>VueDRR：基于vue-draggable-resizable的vue组件，可以实现拖动、拉伸和旋转功能</p>\r\n      </template>\r\n    </Hints>\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"16\">\r\n        <el-card shadow=\"always\">\r\n          <div slot=\"header\" class=\"title\">合成区域</div>\r\n          <div class=\"box-wrapper\">\r\n            <div class=\"drag-container\">\r\n              <video :src=\"videoSrc\" controls />\r\n              <ElementDrr\r\n                v-for=\"(item, index) in elements\"\r\n                :key=\"index\"\r\n                :element=\"item\"\r\n                :handles=\"dragHandles(item.type)\"\r\n                :style=\"elementZIndex(item.type)\"\r\n                @updateActiveEle=\"updateActiveEle\"\r\n              >\r\n                <!-- 图片 -->\r\n                <img v-if=\"item.type==='image'\" :src=\"item.src\" draggable=\"false\">\r\n                <!-- 文字 -->\r\n                <ImageRichText v-if=\"item.type === 'text'\" v-model=\"item.text\" :element=\"item\" :active-ele-text=\"activeEleText\" />\r\n              </ElementDrr>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card shadow=\"always\">\r\n          <div slot=\"header\" class=\"title\">设置区域</div>\r\n          <div class=\"box-content\">\r\n            <el-form class=\"form-wrapper\" label-width=\"70px\">\r\n              <el-form-item label=\"添加文本\">\r\n                <el-button @click=\"addText\">添加文本</el-button>\r\n              </el-form-item>\r\n              <el-form-item label=\"添加图片\">\r\n                <UploadImage @on-success=\"handleAddImage\" />\r\n              </el-form-item>\r\n              <el-form-item label=\"删除元素\">\r\n                <el-button type=\"danger\" @click=\"deleteActiveEle\">删除元素</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n            <TextSetting v-if=\"activeEle.type === 'text'\" :active-ele-text=\"activeEleText\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Hints from '@/components/Hints'\r\nimport ElementDrr from '@/components/ElementDrr'\r\nimport ImageRichText from '@/components/ImageRichText'\r\nimport TextSetting from '@/components/TextSetting'\r\nimport UploadImage from '@/components/UploadImage'\r\nimport { calcImageSize } from '@/utils'\r\n\r\nexport default {\r\n  name: 'VideoMark',\r\n  components: { Hints, ElementDrr, ImageRichText, TextSetting, UploadImage },\r\n  data() {\r\n    return {\r\n      videoSrc: 'https://cdn.jsdelivr.net/gh/baimingxuan/media-store/videos/houlang.mp4',\r\n      elements: [], // 叠加组件数组\r\n      activeEle: {}, // 当前图片上聚焦的叠加组件\r\n      eleNum: 0\r\n    }\r\n  },\r\n  computed: {\r\n    // 选择的文本\r\n    activeEleText() {\r\n      let active = {}\r\n      if (this.activeEle.type === 'text') {\r\n        active = this.activeEle\r\n      }\r\n      return active\r\n    }\r\n  },\r\n  created() {\r\n    this.addText()\r\n    this.addImage({\r\n      active: false,\r\n      src: 'https://cdn.jsdelivr.net/gh/baimingxuan/media-store/images/img06.jpg',\r\n      size: 53248,\r\n      width: 132,\r\n      height: 132\r\n    })\r\n  },\r\n  methods: {\r\n    // 拖动元素把柄\r\n    dragHandles(type) {\r\n      if (type === 'text') {\r\n        return ['e', 'w']\r\n      }\r\n    },\r\n    // 元素层级排序\r\n    elementZIndex(type) {\r\n      let zIndex = 1\r\n      switch (type) {\r\n        case 'text':\r\n          zIndex = 3\r\n          break\r\n        case 'image':\r\n          zIndex = 2\r\n          break\r\n      }\r\n      return {\r\n        zIndex: zIndex\r\n      }\r\n    },\r\n    // 添加文本\r\n    addText() {\r\n      const tagNum = ++this.eleNum\r\n      const text = {\r\n        active: true,\r\n        text: '请输入文本',\r\n        type: 'text',\r\n        tag: 'text_' + tagNum,\r\n        x: 300,\r\n        y: 80,\r\n        w: 180,\r\n        h: 36,\r\n        style: {\r\n          textAlign: 'left',\r\n          lineHeight: '24px',\r\n          fontSize: '24px',\r\n          fontFamily: '微软黑体',\r\n          fontWeight: 400,\r\n          color: '#687684',\r\n          backgroundColor: '#9ac8d8',\r\n          overflow: 'hidden'\r\n        }\r\n      }\r\n      if (this.elements.length > 4) {\r\n        this.$message.warning('图片上最多叠加5个元素！')\r\n      } else {\r\n        this.elements.push(text)\r\n        this.updateActiveEle(text)\r\n      }\r\n    },\r\n    // 添加图片\r\n    addImage(imgObj) {\r\n      const tagNum = ++this.eleNum\r\n      const image = {\r\n        active: imgObj.active,\r\n        type: 'image',\r\n        tag: 'image_' + tagNum,\r\n        x: 320,\r\n        y: 260,\r\n        w: parseInt(imgObj.width),\r\n        h: parseInt(imgObj.height),\r\n        src: imgObj.src,\r\n        size: imgObj.size\r\n      }\r\n      if (this.elements.length > 4) {\r\n        this.$message.warning('图片上最多叠加5个元素！')\r\n      } else {\r\n        this.elements.push(image)\r\n        if (imgObj.active) {\r\n          this.updateActiveEle(image)\r\n        }\r\n      }\r\n    },\r\n    // 上传图片成功\r\n    handleAddImage(data) {\r\n      const dataStrLen = data.replace('data:image/jpeg;base64,', '').length\r\n      const dataSize = parseInt(dataStrLen - (dataStrLen / 8) * 2)\r\n      const img = new Image()\r\n      img.src = data\r\n      img.onload = () => {\r\n        const imageSize = calcImageSize(img.width, img.height, parseInt(850 / 4), parseInt(478 / 4))\r\n        this.addImage({\r\n          active: true,\r\n          src: data,\r\n          size: dataSize,\r\n          width: imageSize.width,\r\n          height: imageSize.height\r\n        })\r\n      }\r\n    },\r\n    // 更新当前选中的元素\r\n    updateActiveEle(element) {\r\n      this.activeEle = element\r\n    },\r\n    // 删除图片上当前选择的元素\r\n    deleteActiveEle() {\r\n      const newElements = this.elements.filter(item => {\r\n        return item.tag !== this.activeEle.tag\r\n      })\r\n      this.$nextTick(() => {\r\n        this.elements = newElements\r\n      })\r\n      this.updateActiveEle({})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.video-mark-wrapper {\r\n  .box-wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 550px;\r\n    overflow: hidden;\r\n    .drag-container {\r\n      position: relative;\r\n      width: 850px;\r\n      height: 478px;\r\n      video {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n      .z-drr-container {\r\n        border: 1px dashed transparent;\r\n        &.z-active {\r\n          border: 1px dashed #2e95ff;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .box-content {\r\n    height: 550px;\r\n    overflow: hidden;\r\n    .form-wrapper {\r\n      width: 300px;\r\n      margin: 50px auto 0;\r\n    }\r\n    .el-button {\r\n      width: 210px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}